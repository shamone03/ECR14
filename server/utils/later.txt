<Form.Group className={'mb-3'}>
    <Form.Label>Add residents in your apartment</Form.Label>
        <div className={'d-flex flex-column'}>
            {members.map((m) =>
                <div className={'d-flex flex-row justify-content-end align-items-end'} key={m.key}>
                    <Form.Control className={`${styles.inputStyle} mb-1 mx-1`} type={'text'} placeholder={'Name'} onChange={e => setName(m.key, e.target.value)}/>
                    <Button className={'mb-1'} variant={'outline-light'} onClick={() => removeName(m.key)}>‚ùå</Button>
                </div>
            )}
        </div>
        <Button style={memberStyle} variant={'outline-light'} onClick={addMember}>Add</Button>
</Form.Group>


const setName = (key, name) => {
    let membersCopy = members
    for (let i of membersCopy) {
        if (i.key === key) {
            i.name = name
        }
    }
    setMembers([...membersCopy])
}

const removeName = (key) => {
    let newMembers = members.filter((i) => i.key !== key)
    setMembers([...newMembers])
}

const addMember = () => {
    const membersCopy = members
    if (membersCopy.length === 0) {
        setMembers([{name: '', key: 1}])
        return
    }
    membersCopy.push({name:'', key: members[members.length - 1].key + 1})
    setMembers([...membersCopy])
    console.log(members)
}

if(!validateMembers(members)) {
    setMemberStyle({border: 'solid 3px red'})

    return false
} else {
    setMemberStyle({})
}

const validateMembers = (members) => {
    if (members.length === 0) {
        alert('Add at least one resident')
        return false
    }
    for (let i of members) {
        if (i.name === '') {
            alert('No empty residents')
            return false
        }
    }
    return true
}

        const normHouseNo = houseNo.charAt(0).toUpperCase() + houseNo.slice(1)
        if (!blocks.includes(normHouseNo)) {
            setAptNoStyle({border: '3px red solid'})
            setAlrExists(false)
            return false
        } else {
            setAptNoStyle({border: '3px transparent'})
            for (let i of registered) {
                if (i.houseNo === normHouseNo) {
                    setAlrExists(true)
                    setAptNoStyle({border: '3px transparent'})
                    return true
                } else {
                    setAptNoStyle({border: '3px transparent'})
                    setAlrExists(false)
                }
            }
            setHouseNo(normHouseNo)
        }
        setAptNoStyle({border: '3px transparent'})
        setAlrExists(false)
        return blocks.includes(normHouseNo)

<Button variant={'light'} onClick={() => setShowMenu(true)}>Menu</Button>
                <Offcanvas show={showMenu} onHide={() => setShowMenu(false)} style={{backgroundColor: '#161b22'}}>
                    <Offcanvas.Header className={'d-flex justify-content-between'} closeVariant={'white'}>
                        <Offcanvas.Title>Menu</Offcanvas.Title>
                        <Button variant={`outline-light ${styles.closeButtonStyle}`} onClick={() => setShowMenu(false)}><AiOutlineClose size={25}/></Button>
                    </Offcanvas.Header>
                    <Offcanvas.Body className={'d-flex flex-column align-content-stretch'}>
                        <div>
                            <Link className={`${styles.linkStyle} mt-3 btn btn-light`} to={'/construction'}>Current Survey</Link>
                        </div>
                        <div>
                            <Link className={`${styles.linkStyle} mt-3 btn btn-light`} to={'/vote'}>Voting</Link>
                        </div>
                        <div>
                            <Link className={`${styles.linkStyle} mt-3 btn btn-light`} to={'/settings'}>Profile Settings</Link>
                        </div>
                        <div>
                            <Link className={`${styles.linkStyle} mt-3 btn btn-light`} to={'/construction'}>Document Archive</Link>
                        </div>
                        <div>
                            <Link className={`${styles.linkStyle} mt-3 btn btn-light`} to={'/construction'}>Events</Link>
                        </div>

                    </Offcanvas.Body>
                </Offcanvas>